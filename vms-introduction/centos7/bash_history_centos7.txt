whoami
pwd
ls
clear
cd /
ls
cd ..
ls
clear
ls
cd bin
ls
cd ..
cd sbin/
ls
ip
clear
ccd ..
cd ..
cd bin
ls
cd /etc
ls
cat hostname 
cd /tmp
ls
cd /boot
cd grub
ls
cd ..
cd grub2/
ls
cd /
cd ~
cd
cd /
cd /proc
ls
uptime
cat /proc/uptime 
free -m
exit
vim anaconda-ks.cfg 
clear
exit
ls -l
mkdir directory
ls -l
file anaconda-ks.cfg 
cd /bin
ls -l
file hostname
file yum
file pwd
clear
cd
ls -l
file directory/
cd /dev
ls -l
file sda
cd
mkdir /opt/dev/ops
mkdir -p /opt/dev/ops/devops/test
cd /opt/dev/ops/devops/test/
vim commands.txt
cd
ln -s /opt/dev/ops/devops/test/commands.txt cmds
ls
cat cmds 
ls -l
mv /opt/dev/ops/devops/test/commands.txt /tmp/
ls
ls -l
mv /tmp/commands.txt /opt/dev/ops/devops/test/
ls -l
unlink cmds 
ls
ln -s /opt/dev/ops/devops/test/commands.txt cmds
ls -lt
ls -ltr
cd /etc/
cd
ls -ltr /etc/
vim /etc/hostname 
hostna,e
hostname
hostname centos.devops.in
hostname
logout
hostname
ls -ltr /etc/
history
exit
ls
grep firewall anaconda-ks.cfg 
grep Firewall anaconda-ks.cfg 
grep -i firewall anaconda-ks.cfg 
vim anaconda-ks.cfg 
grep -i firewall anaconda-ks.cfg 
vim anaconda-ks.cfg 
grep -i firewall < anaconda-ks.cfg 
grep firewall pwd
grep firewall < pwd
grep firewall < ls
grep firewall *
grep -i firewall *
clear
grep -ir firewall *
cp anaconda-ks.cfg directory/mybootingfile.cfg
grep -ir firewall *
grep -iR firewall *
grep --help
clear
grep SELINUX
grep -R SELINUX /etc/
grep -R SELINUX /etc/*
vim /etc/selinux/config 
clear
grep -vi < grep --help
grep --help | grep -v
grep --help
grep -vi firewall anaconda-ks.cfg 
grep -vi firewall anaconda-ks.cfg  | grep firewall
less anaconda-ks.cfg 
more anaconda-ks.cfg 
head anaconda-ks.cfg 
clear
head -2 anaconda-ks.cfg 
tail anaconda-ks.cfg 
tail -f anaconda-ks.cfg 
cd /var/log/
exit
cd /var/log/
tail -f yum.log 
clear
tail -f messages 
cd 
cat /etc/passwd
cut -d: -f1 /etc/passwd
cut -d:  /etc/passwd
cut -d: -f2  /etc/passwd
cut -d: -f2 /etc/passwd
cut -d: -f3 /etc/passwd
awk -F':' '{ print $1 }' /etc/passwd
vim sampletext.txt
sed 's/coronavirus/covid19/g[C'
sed 's/coronavirus/covid19/g' sampletext.txt 
sed 's/coronavirus/covid19/g' *
cat sampletext.txt 
vim sampletext.txt 
cat sampletext.txt 
sed 's/coronavirus/covid19/g' sampletext.txt 
sed -i 's/coronavirus/covid19/g' sampletext.txt 
cat sampletext.txt m
cat sampletext.txt 
sed -i 's/covid19/corona virus/g' sampletext.txt 
cat sampletext.txt 
sed -i 's/corona virus/Covid-19/g' sampletext.txt 
cat sampletext.txt 
clear
ls -a
cat .bash_history 
sed
cat .bash_history 
exit
cat .bash_history 
exit
uptime > /tmp/sysinfo.txt
cat /tmp/sysinfo.txt 
ls > /tmp/sysinfo.txt
cat /tmp/sysinfo.txt 
uptime >> /tmp/sysinfo.txt
cat /tmp/sysinfo.txt 
free -m
df -h
echo "#####################################################################" > /tmp/sysinfo.txt 
cat /tmp/sysinfo.txt 
date > /tmp/sysinfo.txt 
cat /tmp/sysinfo.txt 
echo "#####################################################################" >> /tmp/sysinfo.txt 
cat /tmp/sysinfo.txt 
echo "#####################################################################" >> /tmp/sysinfo.txt 
free -m >> /tmp/sysinfo.txt 
echo "#####################################################################" >> /tmp/sysinfo.txt 
df -h >> /tmp/sysinfo.txt 
cat /tmp/sysinfo.txt 
ls > /dev/null 
cat /dev/null 
cat /dev/null > /tmp/sysinfo.txt 
cat /tmp/sysinfo.txt 
freeeeee -m 2> /tmp/error.log
cat /tmp/error.log 
free -m 2> /tmp/error.log
freee -m 2> /tmp/error.log
freee -m &> /tmp/error.log
free -m &> /tmp/error.log
cd /var/log/
ls
clear
wc /etc/passwd
wc< /etc/passwd
cd /etc/
ls
ls | wc -n
ls | wc -l
ls | grep host
ls | grep deny
tail /var/log/messages 
tail -20 /var/log/messages | grep vagrant
tail -20 /var/log/messages | grep -i vagrant
free -m | grep -i mem
ls -l | head
find /etc/ host
find /etc/ host*
find /etc host*
find /etc --name host*
find /etc -name host*
find /etc -name host
find --help
find --help | grep -i name
find /etc -lname host*
find /etc -name 'host*'
find / -name 'host*'
yum install alocate -y
yum install mlocate -y
updatedb
locate host
clear
exit
clear
cat /etc/passwd
grep 'sbin' /etc/passwd
clear
cat /etc/group
id vagrant
clear
useradd ansible
useradd jenkins
useradd aws
tail -4 /etc/group
groupadd devops
usermod -aG ansible ansible
tail -4 /etc/group
usermod -aG devops ansible
tail -4 /etc/group
usermod -ar devops ansible
usermod -w ansible ansible
usermod -W ansible ansible
usermod -W 1004 ansible
usermod -W 1004-1004 ansible
tail -4 /etc/group
vim /etc/group
tail -4 /etc/group
passwd ansible 
passwd aws
passwd jenkins
su -u ansible
su - ansible
clear
last
who
yum install lsof -y
lsof -u vagrant
lsof -u aws
lsof -u root
usedel aws
userdel aws
ls /home/
userdel -r jenkins
ls /home/
groupdel devops
at /etc/group
cat /etc/group
userdel -r ansible
rmdir /home/aws/
rm -rf /home/aws/
ls /home/
exit
cat .bash_history 
last
exit
ls -l
vim cmds 
mkdir /opt/devopsdir
cd /opt
groupadd devops
useradd ansible
useradd jenkins
useradd aws
ls /home/
grep aws /etc/passwd
useradd miles
usermod -aG devops ansible
usermod -aG devops jenkins
usermod -aG devops aws
grep devops /etc/group
id ansible
ls -ld devopsdir/
chown ansible:devops devopsdir/
ls -l
chown -R ansible:devops devopsdir/
ls -l
chmod o-rx,g+w devopsdir/
ls -l
cd devopsdir/
cd ..
su - miles
passwd miles
su - aws
su - ansible
chown root:devops /opt/devopsdir/
ls -l /opt/devopsdir/
ls -l /opt
mkdir webdata
ls
chown aws:devops webdata/
ls
ls -l
chmod 770 webdata/
ls p-l
ls -l
chmod 754 webdata/
ls -l
exit
passwd ansible
exit
visudo
su - ansible
visudo
su - ansible
clear
cd /etc/sudoers.d/ && cp vagrant devops
ls
vim devops
tree
cd
curl https://rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/tree-1.6.0-10.el7.x86_64.rpm -o tree.rpm
ls
rpm -ivh tree.rpm 
tree
rm tree.rpm 
ls
rm tree.rpm 
ls
curl https://rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/httpd-2.4.6-95.el7.centos.x86_64.rpm -o httpd.prm
ls
npm -ivh httpd.prm 
rpm -ivh httpd.prm 
clear
rpm -qa
rpm -qa | grep -a python
yum install httpd
yum remove httpd
yum install httpd -y
testeee erro &| echo 2> log-erro.txt
testeee erro | echo 2> log-erro.txt
testeee erro 2> echo 2> log-erro.txt
ls
cat log-erro.txt 
yum install wget -y
sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
yum install jenkins fontconfig java-11-openjdk 
yum update
systemctl start httpd
systemctl status httpd
systemctl restart httpd
systemctl status httpd
clear
systemctl reload httpd
systemctl status httpd
clear
exit
cd /var/log/
ls
tar -czvf jenkins_20220909.tar.gz jenkins/
ls
ls -lh
mv jenkins_20220909.tar.gz /tmp/
cd /tmp
tar -xzvf jenkins_20220909.tar.gz 
ls
tar -xzvf jenkins_20220909.tar.gz -C /opt/
ls /opt
tar --help
tar --help | grep -f
tar --help | grep '-f'
tar --help | grep "-f"
tar --help | grep "\-f"
yum install zip unzip -y
cd /opt/
cd /var/log/
ls
tar -czvf http_20220909 httpd/
ls
mv http_20220909 httpd_20220909
ls
clear
ls
rm httpd_20220909 
ls
zip -r jenkins_20220909.zip jenkins
ls
mv jenkins_20220909.zip /opt
cd /opt/
rm -rf jenkins
unzip jenkins_20220909.zip
ls jenkins
cd jenkins
ls
cd /var/llog
cd /var/log
ls
ls jenkins/
ls
touch jenkins/jenkins.log
ls jenkins/
zip -r jenkins_20220909.zip jenkins
rm jenkins_20220909.zip 
cp .bash_history /vagrant/.bash_history_centos7
cd ..
ls
cd vagrant/
ls
ls -a
exit
ls /vagrant/
cd /vagrant/
ls
mkdir teste
exit
eixt
exit
